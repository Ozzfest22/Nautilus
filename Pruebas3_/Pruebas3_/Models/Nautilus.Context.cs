//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pruebas3_.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GymNautilusEntities3 : DbContext
    {
        public GymNautilusEntities3()
            : base("name=GymNautilusEntities3")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Clases> Clases { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<DetallePedido> DetallePedido { get; set; }
        public virtual DbSet<Horarios> Horarios { get; set; }
        public virtual DbSet<Pedidos> Pedidos { get; set; }
        public virtual DbSet<Planes> Planes { get; set; }
        public virtual DbSet<Productos> Productos { get; set; }
        public virtual DbSet<T_TABLAS> T_TABLAS { get; set; }
        public virtual DbSet<T_TIPOTABLA> T_TIPOTABLA { get; set; }
        public virtual DbSet<Trabajador> Trabajador { get; set; }
    
        public virtual int ActualizarEstadoSuscripcion(Nullable<int> codigo, Nullable<int> estado, Nullable<int> cod_Trabajador)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var cod_TrabajadorParameter = cod_Trabajador.HasValue ?
                new ObjectParameter("Cod_Trabajador", cod_Trabajador) :
                new ObjectParameter("Cod_Trabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEstadoSuscripcion", codigoParameter, estadoParameter, cod_TrabajadorParameter);
        }
    
        public virtual ObjectResult<ListarSusc_PorEstado_Result> ListarSusc_PorEstado(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarSusc_PorEstado_Result>("ListarSusc_PorEstado", estadoParameter);
        }
    
        public virtual ObjectResult<PlanMasSolicitado_Result> PlanMasSolicitado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlanMasSolicitado_Result>("PlanMasSolicitado");
        }
    
        public virtual int Sp_ActualizarCategoria(Nullable<int> idCategoria, string descripcion)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ActualizarCategoria", idCategoriaParameter, descripcionParameter);
        }
    
        public virtual int Sp_ActualizarClase(Nullable<int> idClases, string nombreClase)
        {
            var idClasesParameter = idClases.HasValue ?
                new ObjectParameter("IdClases", idClases) :
                new ObjectParameter("IdClases", typeof(int));
    
            var nombreClaseParameter = nombreClase != null ?
                new ObjectParameter("NombreClase", nombreClase) :
                new ObjectParameter("NombreClase", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ActualizarClase", idClasesParameter, nombreClaseParameter);
        }
    
        public virtual int Sp_ActualizarCliente(Nullable<int> idCliente, Nullable<int> estado)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ActualizarCliente", idClienteParameter, estadoParameter);
        }
    
        public virtual int Sp_ActualizarEstadoClase(Nullable<int> idClases, Nullable<int> estado)
        {
            var idClasesParameter = idClases.HasValue ?
                new ObjectParameter("IdClases", idClases) :
                new ObjectParameter("IdClases", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ActualizarEstadoClase", idClasesParameter, estadoParameter);
        }
    
        public virtual int Sp_ActualizarEstadoHorario(Nullable<int> estado, Nullable<int> idHorario)
        {
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var idHorarioParameter = idHorario.HasValue ?
                new ObjectParameter("IdHorario", idHorario) :
                new ObjectParameter("IdHorario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ActualizarEstadoHorario", estadoParameter, idHorarioParameter);
        }
    
        public virtual int Sp_ActualizarEstadoPedido(Nullable<int> idPedidos, Nullable<int> estado, Nullable<int> idTrabajador)
        {
            var idPedidosParameter = idPedidos.HasValue ?
                new ObjectParameter("IdPedidos", idPedidos) :
                new ObjectParameter("IdPedidos", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var idTrabajadorParameter = idTrabajador.HasValue ?
                new ObjectParameter("IdTrabajador", idTrabajador) :
                new ObjectParameter("IdTrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ActualizarEstadoPedido", idPedidosParameter, estadoParameter, idTrabajadorParameter);
        }
    
        public virtual int Sp_ActualizarEstadoProducto(Nullable<int> estado, Nullable<int> idProducto)
        {
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ActualizarEstadoProducto", estadoParameter, idProductoParameter);
        }
    
        public virtual int Sp_ActualizarEstadoTrabajador(Nullable<int> idTrabajador)
        {
            var idTrabajadorParameter = idTrabajador.HasValue ?
                new ObjectParameter("IdTrabajador", idTrabajador) :
                new ObjectParameter("IdTrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ActualizarEstadoTrabajador", idTrabajadorParameter);
        }
    
        public virtual int Sp_ActualizarProducto(Nullable<int> idProducto, string nombreProducto, Nullable<decimal> precio, string descripcion, string imagenProducto, Nullable<int> idCategoria, Nullable<int> cantidadProductos)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var nombreProductoParameter = nombreProducto != null ?
                new ObjectParameter("NombreProducto", nombreProducto) :
                new ObjectParameter("NombreProducto", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var imagenProductoParameter = imagenProducto != null ?
                new ObjectParameter("ImagenProducto", imagenProducto) :
                new ObjectParameter("ImagenProducto", typeof(string));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var cantidadProductosParameter = cantidadProductos.HasValue ?
                new ObjectParameter("CantidadProductos", cantidadProductos) :
                new ObjectParameter("CantidadProductos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ActualizarProducto", idProductoParameter, nombreProductoParameter, precioParameter, descripcionParameter, imagenProductoParameter, idCategoriaParameter, cantidadProductosParameter);
        }
    
        public virtual int Sp_ActualizarStock(Nullable<int> idProducto, Nullable<int> cantidad)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ActualizarStock", idProductoParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<Sp_BuscarHorario_Result> Sp_BuscarHorario(Nullable<int> idHorario)
        {
            var idHorarioParameter = idHorario.HasValue ?
                new ObjectParameter("IdHorario", idHorario) :
                new ObjectParameter("IdHorario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_BuscarHorario_Result>("Sp_BuscarHorario", idHorarioParameter);
        }
    
        public virtual ObjectResult<Sp_BuscarProducto_Result> Sp_BuscarProducto(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_BuscarProducto_Result>("Sp_BuscarProducto", idProductoParameter);
        }
    
        public virtual ObjectResult<Sp_ClasesPorInstructor_Result> Sp_ClasesPorInstructor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ClasesPorInstructor_Result>("Sp_ClasesPorInstructor");
        }
    
        public virtual ObjectResult<Sp_ClientesMasPedidos_Result> Sp_ClientesMasPedidos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ClientesMasPedidos_Result>("Sp_ClientesMasPedidos");
        }
    
        public virtual ObjectResult<Sp_IngresoCliente_Result> Sp_IngresoCliente(string email, string contrasena)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_IngresoCliente_Result>("Sp_IngresoCliente", emailParameter, contrasenaParameter);
        }
    
        public virtual ObjectResult<Sp_IngresoTrabajador_Result> Sp_IngresoTrabajador(string email, string contrasena)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_IngresoTrabajador_Result>("Sp_IngresoTrabajador", emailParameter, contrasenaParameter);
        }
    
        public virtual int Sp_InsertarCategoria(string descripcion)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertarCategoria", descripcionParameter);
        }
    
        public virtual int Sp_InsertarClase(string nombreClase)
        {
            var nombreClaseParameter = nombreClase != null ?
                new ObjectParameter("NombreClase", nombreClase) :
                new ObjectParameter("NombreClase", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertarClase", nombreClaseParameter);
        }
    
        public virtual int Sp_InsertarCliente(string nombre, string apellidos, string dni, Nullable<int> edad, Nullable<int> sexo, Nullable<int> distrito, Nullable<System.DateTime> fechaNacimiento, string email, string contrasena, string telefono)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var dniParameter = dni != null ?
                new ObjectParameter("Dni", dni) :
                new ObjectParameter("Dni", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(int));
    
            var distritoParameter = distrito.HasValue ?
                new ObjectParameter("Distrito", distrito) :
                new ObjectParameter("Distrito", typeof(int));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertarCliente", nombreParameter, apellidosParameter, dniParameter, edadParameter, sexoParameter, distritoParameter, fechaNacimientoParameter, emailParameter, contrasenaParameter, telefonoParameter);
        }
    
        public virtual int Sp_InsertarDetallePedido(Nullable<decimal> montoTotal, Nullable<decimal> precio, Nullable<int> cantidad, Nullable<int> idPedidos, Nullable<int> idProducto)
        {
            var montoTotalParameter = montoTotal.HasValue ?
                new ObjectParameter("MontoTotal", montoTotal) :
                new ObjectParameter("MontoTotal", typeof(decimal));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var idPedidosParameter = idPedidos.HasValue ?
                new ObjectParameter("IdPedidos", idPedidos) :
                new ObjectParameter("IdPedidos", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertarDetallePedido", montoTotalParameter, precioParameter, cantidadParameter, idPedidosParameter, idProductoParameter);
        }
    
        public virtual int Sp_InsertarHorarios(string instructor, string hora, string dia, Nullable<int> idClases, Nullable<int> idTrabajador)
        {
            var instructorParameter = instructor != null ?
                new ObjectParameter("Instructor", instructor) :
                new ObjectParameter("Instructor", typeof(string));
    
            var horaParameter = hora != null ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(string));
    
            var diaParameter = dia != null ?
                new ObjectParameter("Dia", dia) :
                new ObjectParameter("Dia", typeof(string));
    
            var idClasesParameter = idClases.HasValue ?
                new ObjectParameter("IdClases", idClases) :
                new ObjectParameter("IdClases", typeof(int));
    
            var idTrabajadorParameter = idTrabajador.HasValue ?
                new ObjectParameter("IdTrabajador", idTrabajador) :
                new ObjectParameter("IdTrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertarHorarios", instructorParameter, horaParameter, diaParameter, idClasesParameter, idTrabajadorParameter);
        }
    
        public virtual int Sp_InsertarPedido(Nullable<int> metodoPago, Nullable<int> idCliente)
        {
            var metodoPagoParameter = metodoPago.HasValue ?
                new ObjectParameter("MetodoPago", metodoPago) :
                new ObjectParameter("MetodoPago", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertarPedido", metodoPagoParameter, idClienteParameter);
        }
    
        public virtual int Sp_InsertarProducto(string nombreProducto, Nullable<decimal> precio, string descripcion, Nullable<int> idCategoria, string imagenProducto, Nullable<int> cantidadProducto)
        {
            var nombreProductoParameter = nombreProducto != null ?
                new ObjectParameter("NombreProducto", nombreProducto) :
                new ObjectParameter("NombreProducto", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var imagenProductoParameter = imagenProducto != null ?
                new ObjectParameter("ImagenProducto", imagenProducto) :
                new ObjectParameter("ImagenProducto", typeof(string));
    
            var cantidadProductoParameter = cantidadProducto.HasValue ?
                new ObjectParameter("CantidadProducto", cantidadProducto) :
                new ObjectParameter("CantidadProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertarProducto", nombreProductoParameter, precioParameter, descripcionParameter, idCategoriaParameter, imagenProductoParameter, cantidadProductoParameter);
        }
    
        public virtual int Sp_InsertarTrabajador(string nombre, string apellidos, string dni, Nullable<int> edad, Nullable<int> sexo, Nullable<int> distrito, Nullable<System.DateTime> fechaNacimiento, string email, string contrasena, string telefono)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var dniParameter = dni != null ?
                new ObjectParameter("Dni", dni) :
                new ObjectParameter("Dni", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(int));
    
            var distritoParameter = distrito.HasValue ?
                new ObjectParameter("Distrito", distrito) :
                new ObjectParameter("Distrito", typeof(int));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertarTrabajador", nombreParameter, apellidosParameter, dniParameter, edadParameter, sexoParameter, distritoParameter, fechaNacimientoParameter, emailParameter, contrasenaParameter, telefonoParameter);
        }
    
        public virtual ObjectResult<SP_Listar_Combos_Result> SP_Listar_Combos(string oP)
        {
            var oPParameter = oP != null ?
                new ObjectParameter("OP", oP) :
                new ObjectParameter("OP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listar_Combos_Result>("SP_Listar_Combos", oPParameter);
        }
    
        public virtual ObjectResult<Sp_ListarCategoria_Result> Sp_ListarCategoria()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ListarCategoria_Result>("Sp_ListarCategoria");
        }
    
        public virtual ObjectResult<Sp_ListarCategoriaProductoXEstado_Result> Sp_ListarCategoriaProductoXEstado(string categoria, string estado)
        {
            var categoriaParameter = categoria != null ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ListarCategoriaProductoXEstado_Result>("Sp_ListarCategoriaProductoXEstado", categoriaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Sp_ListarClase_Result> Sp_ListarClase()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ListarClase_Result>("Sp_ListarClase");
        }
    
        public virtual ObjectResult<Sp_ListarCliente_Result> Sp_ListarCliente(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ListarCliente_Result>("Sp_ListarCliente", estadoParameter);
        }
    
        public virtual ObjectResult<Sp_ListarHorariosXDia_Result> Sp_ListarHorariosXDia(string dia, string estado)
        {
            var diaParameter = dia != null ?
                new ObjectParameter("Dia", dia) :
                new ObjectParameter("Dia", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ListarHorariosXDia_Result>("Sp_ListarHorariosXDia", diaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Sp_ListarMisPedidos_Result> Sp_ListarMisPedidos(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ListarMisPedidos_Result>("Sp_ListarMisPedidos", idClienteParameter);
        }
    
        public virtual ObjectResult<Sp_ListarPedidosPorEstados_Result> Sp_ListarPedidosPorEstados(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ListarPedidosPorEstados_Result>("Sp_ListarPedidosPorEstados", estadoParameter);
        }
    
        public virtual ObjectResult<Sp_ListarTrabajador_Result> Sp_ListarTrabajador()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ListarTrabajador_Result>("Sp_ListarTrabajador");
        }
    
        public virtual int Sp_ModificarHorarios(string instructor, Nullable<int> idClases, Nullable<int> idTrabajador)
        {
            var instructorParameter = instructor != null ?
                new ObjectParameter("Instructor", instructor) :
                new ObjectParameter("Instructor", typeof(string));
    
            var idClasesParameter = idClases.HasValue ?
                new ObjectParameter("IdClases", idClases) :
                new ObjectParameter("IdClases", typeof(int));
    
            var idTrabajadorParameter = idTrabajador.HasValue ?
                new ObjectParameter("IdTrabajador", idTrabajador) :
                new ObjectParameter("IdTrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ModificarHorarios", instructorParameter, idClasesParameter, idTrabajadorParameter);
        }
    
        public virtual ObjectResult<Sp_ReporteXFecha_Result> Sp_ReporteXFecha()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ReporteXFecha_Result>("Sp_ReporteXFecha");
        }
    
        public virtual ObjectResult<Sp_SusAceptadasMes_Result> Sp_SusAceptadasMes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SusAceptadasMes_Result>("Sp_SusAceptadasMes");
        }
    
        public virtual ObjectResult<string> Sp_ValidarUsuarioCliente(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_ValidarUsuarioCliente", emailParameter);
        }
    
        public virtual ObjectResult<string> Sp_ValidarUsuarioTrabajador(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_ValidarUsuarioTrabajador", emailParameter);
        }
    
        public virtual ObjectResult<Sp_VerDetalle_Result> Sp_VerDetalle(Nullable<int> idPedidos)
        {
            var idPedidosParameter = idPedidos.HasValue ?
                new ObjectParameter("IdPedidos", idPedidos) :
                new ObjectParameter("IdPedidos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_VerDetalle_Result>("Sp_VerDetalle", idPedidosParameter);
        }
    
        public virtual ObjectResult<SuplementoMasVendido_Result> SuplementoMasVendido()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SuplementoMasVendido_Result>("SuplementoMasVendido");
        }
    
        public virtual int Suscripcion(string nombre, string email, string telefono, string planes)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var planesParameter = planes != null ?
                new ObjectParameter("Planes", planes) :
                new ObjectParameter("Planes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Suscripcion", nombreParameter, emailParameter, telefonoParameter, planesParameter);
        }
    }
}
